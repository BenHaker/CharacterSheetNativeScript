"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var file_system_1 = require("file-system");
var DataService = (function () {
    function DataService() {
        var _this = this;
        this.wasLoaded = false;
        this.folderName = "characters-data";
        this.fileName = "characters.json";
        this.loadedFunctions = [];
        this.subCode = 0;
        this.addLoadedEvent = function (callback) {
            _this.loadedFunctions[_this.subCode] = callback;
            ++_this.subCode;
            return _this.subCode;
        };
        this.removeLoadedEvent = function (subCode) {
            delete _this.loadedFunctions[subCode];
        };
        this.loadData = function () {
            var folder = file_system_1.knownFolders.documents().getFolder(_this.folderName);
            var file = folder.getFile(_this.fileName);
            file.readText()
                .then(function (data) {
                if (data != null && data != "")
                    _this.characters = JSON.parse(data);
                else
                    _this.characters = new Array();
                _this.wasLoaded = true;
                _this.loadedFunctions.forEach(function (callback) { return callback(); });
            })
                .catch(function (err) { return console.log(err); });
        };
        this.saveData = function () {
            var folder = file_system_1.knownFolders.documents().getFolder(_this.folderName);
            var file = folder.getFile(_this.fileName);
            file.writeText(JSON.stringify(_this.characters));
        };
        this.setSelectedCharacter = function (id) {
            _this.selectedId = id;
        };
        this.getSelectedCharacter = function () {
            var character = _this.characters.filter((function (character) { return character.id == _this.selectedId; }), _this.selectedId)[0];
            _this.validateCharacter(character);
            return character;
        };
        this.findNextId = function () {
            var tmp = _this.characters.sort(function (a, b) { return a.id - b.id; });
            if (tmp == null || tmp.length == 0)
                return 1;
            return tmp[tmp.length - 1].id + 1;
        };
        this.getCharacters = function () {
            if (_this.wasLoaded == false)
                _this.loadData();
            return _this.characters;
        };
        this.getCharacter = function (id) {
            var character = _this.characters.find(function (character) { return character.id == id; });
            _this.validateCharacter(character);
            return character;
        };
        this.validateCharacter = function (character) {
            if (character != null) {
                if (character.treasure == null)
                    character.treasure = new Treasure();
                if (character.spellbook == null)
                    character.spellbook = new Spellbook();
                if (character.spellslots == null)
                    character.spellslots = new Spellslots();
            }
        };
        this.addCharacter = function () {
            _this.characters[_this.characters.length] = new Character(_this.findNextId());
            _this.saveData();
        };
        this.deleteCharacter = function (id) {
            var index = _this.characters.findIndex(function (character) { return character.id == id; });
            _this.characters.splice(index, 1);
            console.log(_this.characters);
            _this.saveData();
        };
    }
    return DataService;
}());
DataService = __decorate([
    core_1.Injectable()
], DataService);
exports.DataService = DataService;
var Character = (function () {
    function Character(id) {
        this.id = id;
        this.playerName = "New Player";
        this.characterName = "New Character";
        this.level = 1;
        this.xp = 0;
        this.strength = 3;
        this.dexterity = 3;
        this.constitution = 3;
        this.intelligence = 3;
        this.wisdom = 3;
        this.charisma = 3;
        this.ac = 9;
        this.weapons = new Array();
        this.treasure = new Treasure();
        this.spellbook = new Spellbook();
        this.spellslots = new Spellslots();
    }
    return Character;
}());
exports.Character = Character;
var Spellbook = (function () {
    function Spellbook() {
    }
    return Spellbook;
}());
exports.Spellbook = Spellbook;
var Spellslots = (function () {
    function Spellslots() {
    }
    return Spellslots;
}());
exports.Spellslots = Spellslots;
var Treasure = (function () {
    function Treasure() {
    }
    return Treasure;
}());
exports.Treasure = Treasure;
var Weapon = (function () {
    function Weapon() {
    }
    return Weapon;
}());
exports.Weapon = Weapon;
//# sourceMappingURL=data:application/json;base64,