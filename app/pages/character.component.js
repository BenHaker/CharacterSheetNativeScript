"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var datasource_1 = require("../data/datasource");
var characterlogic_1 = require("../data/characterlogic");
var toolbar_component_1 = require("./toolbar.component");
var dialogs_1 = require("ui/dialogs");
var CharacterComponent = (function () {
    function CharacterComponent(dataService) {
        var _this = this;
        this.dataService = dataService;
        this.currentTab = toolbar_component_1.CharacterTab.Character;
        this.displayClassesDialog = function () {
            var options = {
                title: "Class Selection",
                message: "Choose Your Class",
                cancelButtonText: "Cancel",
                actions: _this.logic.getClasses()
            };
            dialogs_1.action(options).then(function (result) {
                if (result != "Cancel") {
                    _this.characterClass = result;
                    _this.character.class = _this.logic.getClasses().indexOf(result);
                    if (_this.logic.isValidLevel(_this.character.level) == false)
                        _this.character.level = 1;
                    _this.maxLevel = _this.logic.getMaxLevel();
                }
            });
        };
    }
    CharacterComponent.prototype.ngOnInit = function () {
        var tmp;
        this.character = this.dataService.getSelectedCharacter();
        this.logic = new characterlogic_1.CharacterLogic(this.character);
        tmp = this.logic.getClasses()[this.character.class];
        if (tmp == null || tmp == 'undefined')
            this.characterClass = "Select Class";
        else
            this.characterClass = tmp;
        this.maxLevel = this.logic.getMaxLevel();
    };
    return CharacterComponent;
}());
CharacterComponent = __decorate([
    core_1.Component({
        selector: "character",
        template: "<GridLayout rows=\"auto, *\">\n                <Toolbar [currentLocation]=\"currentTab\" row=\"0\"></Toolbar>\n                <StackLayout class=\"form\" row=\"1\">\n                <GridLayout columns=\"auto, *\" rows=\"auto, auto, auto, auto, auto, auto\" class=\"input-field input-sides\">\n                    <Label text=\"Player Name\" row=\"0\" col=\"0\" class=\"body\"></Label>\n                    <TextField [(ngModel)]=\"character.playerName\" row=\"0\" col=\"1\" hint=\"Type Player Name\" class=\"input botton_border\"></TextField>\n                    <Label text=\"Character Name\" row=\"1\" col=\"0\" class=\"body p-r-5\"></Label>\n                    <TextField [(ngModel)]=\"character.characterName\" row=\"1\" col=\"1\" hint=\"Type Character Name\" class=\"input botton_border\"></TextField>\n                    <Label text=\"Alignment\" row=\"2\" col=\"0\" class=\"body\"></Label>\n                    <TextField [(ngModel)]=\"character.alignment\" row=\"2\" col=\"1\" class=\"input botton_border\"></TextField>\n                    <Label text=\"Class\" row=\"3\" col=\"0\" class=\"body m-t-10\"></Label>\n                    <Button [text]=\"characterClass + ' ' + ' ...'\" (tap)=\"displayClassesDialog()\" row=\"3\" col=\"1\" class=\"btn-primary btn-form\"></Button>\n                    <Label text=\"Level\" row=\"4\" col=\"0\" class=\"body\"></Label>\n                    <GridLayout row=\"4\" col=\"1\" columns=\"auto, *, auto, auto\">\n                        <Label text=\"1\" row=\"0\" col=\"0\"></Label>\n                        <Slider [(ngModel)]=\"character.level\" minValue=\"1\" [maxValue]=\"maxLevel\" row=\"0\" col=\"1\"></Slider>\n                        <Label [text]=\"maxLevel\" row=\"0\" col=\"2\"></Label>\n                        <Label [text]=\"'(' + character.level + ')'\" row=\"0\" col=\"3\" class=\"p-l-5 p-r-5\" style=\"width:40;\"></Label>\n                    </GridLayout>\n                    <Label text=\"XP\" row=\"5\" col=\"0\" class=\"body\"></Label>\n                    <TextField [(ngModel)]=\"character.xp\" row=\"5\" col=\"1\" keyboardType=\"number\" class=\"input botton_border\"></TextField>\n                </GridLayout>\n                </StackLayout>\n                </GridLayout>"
    }),
    __metadata("design:paramtypes", [datasource_1.DataService])
], CharacterComponent);
exports.CharacterComponent = CharacterComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcmFjdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNoYXJhY3Rlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBNEQ7QUFDNUQsaURBQTREO0FBQzVELHlEQUF3RDtBQUN4RCx5REFBcUU7QUFDckUsc0NBQW9DO0FBOEJwQyxJQUFhLGtCQUFrQjtJQUMzQiw0QkFBMkIsV0FBd0I7UUFBbkQsaUJBQXdEO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBRTNDLGVBQVUsR0FBaUIsZ0NBQVksQ0FBQyxTQUFTLENBQUM7UUFrQjFELHlCQUFvQixHQUFHO1lBQ25CLElBQUksT0FBTyxHQUFHO2dCQUNWLEtBQUssRUFBRSxpQkFBaUI7Z0JBQ3hCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLGdCQUFnQixFQUFFLFFBQVE7Z0JBQzFCLE9BQU8sRUFBRSxLQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRTthQUNuQyxDQUFDO1lBQ0YsZ0JBQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFNO2dCQUN4QixFQUFFLENBQUEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDcEIsS0FBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUM7b0JBQzdCLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLEtBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUMvRCxFQUFFLENBQUEsQ0FBQyxLQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQzt3QkFDdEQsS0FBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO29CQUM3QixLQUFJLENBQUMsUUFBUSxHQUFHLEtBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQzdDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQTtJQXBDc0QsQ0FBQztJQU94RCxxQ0FBUSxHQUFSO1FBQ0ksSUFBSSxHQUFXLENBQUM7UUFFaEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLG9CQUFvQixFQUFFLENBQUM7UUFDekQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLCtCQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2hELEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEQsRUFBRSxDQUFBLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3pDLElBQUk7WUFDQSxJQUFJLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQztRQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQW1CTCx5QkFBQztBQUFELENBQUMsQUF0Q0QsSUFzQ0M7QUF0Q1ksa0JBQWtCO0lBNUI5QixnQkFBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLFdBQVc7UUFDckIsUUFBUSxFQUFFLCtzRUF1QmdCO0tBQzdCLENBQUM7cUNBRzBDLHdCQUFXO0dBRDFDLGtCQUFrQixDQXNDOUI7QUF0Q1ksZ0RBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgQ2hhcmFjdGVyLCBEYXRhU2VydmljZSB9IGZyb20gJy4uL2RhdGEvZGF0YXNvdXJjZSc7XHJcbmltcG9ydCB7IENoYXJhY3RlckxvZ2ljIH0gZnJvbSAnLi4vZGF0YS9jaGFyYWN0ZXJsb2dpYyc7XHJcbmltcG9ydCB7IFRvb2xiYXJDb21wb25lbnQsIENoYXJhY3RlclRhYiB9IGZyb20gJy4vdG9vbGJhci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBhY3Rpb24gfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJjaGFyYWN0ZXJcIixcclxuICAgIHRlbXBsYXRlOiBgPEdyaWRMYXlvdXQgcm93cz1cImF1dG8sICpcIj5cclxuICAgICAgICAgICAgICAgIDxUb29sYmFyIFtjdXJyZW50TG9jYXRpb25dPVwiY3VycmVudFRhYlwiIHJvdz1cIjBcIj48L1Rvb2xiYXI+XHJcbiAgICAgICAgICAgICAgICA8U3RhY2tMYXlvdXQgY2xhc3M9XCJmb3JtXCIgcm93PVwiMVwiPlxyXG4gICAgICAgICAgICAgICAgPEdyaWRMYXlvdXQgY29sdW1ucz1cImF1dG8sICpcIiByb3dzPVwiYXV0bywgYXV0bywgYXV0bywgYXV0bywgYXV0bywgYXV0b1wiIGNsYXNzPVwiaW5wdXQtZmllbGQgaW5wdXQtc2lkZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICA8TGFiZWwgdGV4dD1cIlBsYXllciBOYW1lXCIgcm93PVwiMFwiIGNvbD1cIjBcIiBjbGFzcz1cImJvZHlcIj48L0xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUZXh0RmllbGQgWyhuZ01vZGVsKV09XCJjaGFyYWN0ZXIucGxheWVyTmFtZVwiIHJvdz1cIjBcIiBjb2w9XCIxXCIgaGludD1cIlR5cGUgUGxheWVyIE5hbWVcIiBjbGFzcz1cImlucHV0IGJvdHRvbl9ib3JkZXJcIj48L1RleHRGaWVsZD5cclxuICAgICAgICAgICAgICAgICAgICA8TGFiZWwgdGV4dD1cIkNoYXJhY3RlciBOYW1lXCIgcm93PVwiMVwiIGNvbD1cIjBcIiBjbGFzcz1cImJvZHkgcC1yLTVcIj48L0xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUZXh0RmllbGQgWyhuZ01vZGVsKV09XCJjaGFyYWN0ZXIuY2hhcmFjdGVyTmFtZVwiIHJvdz1cIjFcIiBjb2w9XCIxXCIgaGludD1cIlR5cGUgQ2hhcmFjdGVyIE5hbWVcIiBjbGFzcz1cImlucHV0IGJvdHRvbl9ib3JkZXJcIj48L1RleHRGaWVsZD5cclxuICAgICAgICAgICAgICAgICAgICA8TGFiZWwgdGV4dD1cIkFsaWdubWVudFwiIHJvdz1cIjJcIiBjb2w9XCIwXCIgY2xhc3M9XCJib2R5XCI+PC9MYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8VGV4dEZpZWxkIFsobmdNb2RlbCldPVwiY2hhcmFjdGVyLmFsaWdubWVudFwiIHJvdz1cIjJcIiBjb2w9XCIxXCIgY2xhc3M9XCJpbnB1dCBib3R0b25fYm9yZGVyXCI+PC9UZXh0RmllbGQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPExhYmVsIHRleHQ9XCJDbGFzc1wiIHJvdz1cIjNcIiBjb2w9XCIwXCIgY2xhc3M9XCJib2R5IG0tdC0xMFwiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBbdGV4dF09XCJjaGFyYWN0ZXJDbGFzcyArICcgJyArICcgLi4uJ1wiICh0YXApPVwiZGlzcGxheUNsYXNzZXNEaWFsb2coKVwiIHJvdz1cIjNcIiBjb2w9XCIxXCIgY2xhc3M9XCJidG4tcHJpbWFyeSBidG4tZm9ybVwiPjwvQnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMYWJlbCB0ZXh0PVwiTGV2ZWxcIiByb3c9XCI0XCIgY29sPVwiMFwiIGNsYXNzPVwiYm9keVwiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPEdyaWRMYXlvdXQgcm93PVwiNFwiIGNvbD1cIjFcIiBjb2x1bW5zPVwiYXV0bywgKiwgYXV0bywgYXV0b1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWwgdGV4dD1cIjFcIiByb3c9XCIwXCIgY29sPVwiMFwiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxTbGlkZXIgWyhuZ01vZGVsKV09XCJjaGFyYWN0ZXIubGV2ZWxcIiBtaW5WYWx1ZT1cIjFcIiBbbWF4VmFsdWVdPVwibWF4TGV2ZWxcIiByb3c9XCIwXCIgY29sPVwiMVwiPjwvU2xpZGVyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8TGFiZWwgW3RleHRdPVwibWF4TGV2ZWxcIiByb3c9XCIwXCIgY29sPVwiMlwiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxMYWJlbCBbdGV4dF09XCInKCcgKyBjaGFyYWN0ZXIubGV2ZWwgKyAnKSdcIiByb3c9XCIwXCIgY29sPVwiM1wiIGNsYXNzPVwicC1sLTUgcC1yLTVcIiBzdHlsZT1cIndpZHRoOjQwO1wiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9HcmlkTGF5b3V0PlxyXG4gICAgICAgICAgICAgICAgICAgIDxMYWJlbCB0ZXh0PVwiWFBcIiByb3c9XCI1XCIgY29sPVwiMFwiIGNsYXNzPVwiYm9keVwiPjwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRleHRGaWVsZCBbKG5nTW9kZWwpXT1cImNoYXJhY3Rlci54cFwiIHJvdz1cIjVcIiBjb2w9XCIxXCIga2V5Ym9hcmRUeXBlPVwibnVtYmVyXCIgY2xhc3M9XCJpbnB1dCBib3R0b25fYm9yZGVyXCI+PC9UZXh0RmllbGQ+XHJcbiAgICAgICAgICAgICAgICA8L0dyaWRMYXlvdXQ+XHJcbiAgICAgICAgICAgICAgICA8L1N0YWNrTGF5b3V0PlxyXG4gICAgICAgICAgICAgICAgPC9HcmlkTGF5b3V0PmBcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBDaGFyYWN0ZXJDb21wb25lbnQge1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0YVNlcnZpY2U6IERhdGFTZXJ2aWNlKSB7IH1cclxuICAgIHByaXZhdGUgY2hhcmFjdGVyOiBDaGFyYWN0ZXI7XHJcbiAgICBwcml2YXRlIGN1cnJlbnRUYWI6IENoYXJhY3RlclRhYiA9IENoYXJhY3RlclRhYi5DaGFyYWN0ZXI7XHJcbiAgICBwcml2YXRlIGxvZ2ljOiBDaGFyYWN0ZXJMb2dpYztcclxuICAgIHByaXZhdGUgY2hhcmFjdGVyQ2xhc3M6IHN0cmluZztcclxuICAgIHByaXZhdGUgbWF4TGV2ZWw6IG51bWJlcjtcclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgdG1wOiBzdHJpbmc7XHJcblxyXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyID0gdGhpcy5kYXRhU2VydmljZS5nZXRTZWxlY3RlZENoYXJhY3RlcigpO1xyXG4gICAgICAgIHRoaXMubG9naWMgPSBuZXcgQ2hhcmFjdGVyTG9naWModGhpcy5jaGFyYWN0ZXIpO1xyXG4gICAgICAgIHRtcCA9IHRoaXMubG9naWMuZ2V0Q2xhc3NlcygpW3RoaXMuY2hhcmFjdGVyLmNsYXNzXTtcclxuICAgICAgICBpZih0bXAgPT0gbnVsbCB8fCB0bXAgPT0gJ3VuZGVmaW5lZCcpXHJcbiAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ2xhc3MgPSBcIlNlbGVjdCBDbGFzc1wiO1xyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDbGFzcyA9IHRtcDtcclxuICAgICAgICB0aGlzLm1heExldmVsID0gdGhpcy5sb2dpYy5nZXRNYXhMZXZlbCgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBkaXNwbGF5Q2xhc3Nlc0RpYWxvZyA9ICgpID0+IHtcclxuICAgICAgICBsZXQgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiQ2xhc3MgU2VsZWN0aW9uXCIsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiQ2hvb3NlIFlvdXIgQ2xhc3NcIixcclxuICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogXCJDYW5jZWxcIixcclxuICAgICAgICAgICAgYWN0aW9uczogdGhpcy5sb2dpYy5nZXRDbGFzc2VzKClcclxuICAgICAgICB9O1xyXG4gICAgICAgIGFjdGlvbihvcHRpb25zKS50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgaWYocmVzdWx0ICE9IFwiQ2FuY2VsXCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ2xhc3MgPSByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNoYXJhY3Rlci5jbGFzcyA9IHRoaXMubG9naWMuZ2V0Q2xhc3NlcygpLmluZGV4T2YocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMubG9naWMuaXNWYWxpZExldmVsKHRoaXMuY2hhcmFjdGVyLmxldmVsKSA9PSBmYWxzZSlcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJhY3Rlci5sZXZlbCA9IDE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1heExldmVsID0gdGhpcy5sb2dpYy5nZXRNYXhMZXZlbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iXX0=