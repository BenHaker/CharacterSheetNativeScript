"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var metadatasource_1 = require("./metadatasource");
var CharacterLogic = (function () {
    function CharacterLogic(character) {
        var _this = this;
        this.getAttributeModifier = function (attribute) {
            var attrValue;
            if (attribute == null || _this.character == null)
                return 0;
            if (_this.character[attribute] == null)
                return 0;
            attrValue = _this.character[attribute];
            if (typeof (attrValue) == "string")
                attrValue = parseInt(attrValue);
            switch (attrValue) {
                case 2:
                case 3:
                    return -3;
                case 4:
                case 5:
                    return -2;
                case 6:
                case 7:
                case 8:
                    return -1;
                case 9:
                case 10:
                case 11:
                case 12:
                    return 0;
                case 13:
                case 14:
                case 15:
                    return 1;
                case 16:
                case 17:
                    return 2;
                case 18:
                    return 3;
                default:
                    return 0;
            }
        };
        this.getTHAC0 = function () {
            var level = _this.character.level;
            switch (_this.character.class) {
                case metadatasource_1.Class.Fighter:
                case metadatasource_1.Class.Dwarf:
                case metadatasource_1.Class.Elf:
                case metadatasource_1.Class.Halfling:
                    return 19 - (Math.ceil(level / 3) - 1) * 2;
                case metadatasource_1.Class.Cleric:
                case metadatasource_1.Class.Thief:
                    return 19 - (Math.ceil(level / 4) - 1) * 2;
                case metadatasource_1.Class.MagicUser:
                    return 19 - (Math.ceil(level / 5) - 1) * 2;
                default:
                    return 19;
            }
        };
        this.getAttackBonus = function () {
            return 20 - _this.getTHAC0();
        };
        this.getReverseAC = function () {
            return 20 - _this.character.ac;
        };
        this.isValidLevel = function (level) {
            if (level < 1)
                return false;
            return level <= _this.getMaxLevel();
        };
        this.getMaxLevel = function () {
            switch (_this.character.class) {
                case metadatasource_1.Class.Dwarf:
                    return 12;
                case metadatasource_1.Class.Elf:
                    return 10;
                case metadatasource_1.Class.Halfling:
                    return 8;
                case metadatasource_1.Class.Cleric:
                case metadatasource_1.Class.Fighter:
                case metadatasource_1.Class.MagicUser:
                case metadatasource_1.Class.Thief:
                    return 36;
            }
            return 36;
        };
        this.getClasses = function () {
            return metadatasource_1.MetaDataService.getClasses();
        };
        this.getSave = function (saveType) {
            return metadatasource_1.MetaDataService.getSaves(_this.character.class, _this.character.level, saveType);
        };
        this.getSpellSlots = function (spellLevel) {
            return metadatasource_1.MetaDataService.getSpellSlots(_this.character.class, _this.character.level, spellLevel);
        };
        this.character = character;
    }
    return CharacterLogic;
}());
exports.CharacterLogic = CharacterLogic;
//# sourceMappingURL=data:application/json;base64,